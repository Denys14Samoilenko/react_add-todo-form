{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getUserById","userId","usersFromServer","find","preparedTodos","App","useState","todoTitle","setTodoTitle","setUserId","setTodos","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","preventDefault","newTodo","todoIds","Math","max","getNewTodoId","prevTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78aa4db6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo = ({ user }: Props) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { TodoWithUser } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser\n};\n\nexport const TodoInfo = ({ todo }: Props) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user\n        ? (<UserInfo user={user} />)\n        : 'User is not selected'}\n\n    </article>\n  );\n};\n","import { TodoWithUser } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[]\n};\n\nexport const TodoList = ({ todos }: Props) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoWithUser } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(({ id }) => id === userId) || null;\n}\n\nconst preparedTodos: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState(preparedTodos);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const resetForm = () => {\n    setTodoTitle('');\n    setUserId(0);\n  };\n\n  const addNewTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!todoTitle || !userId) {\n      setHasTitleError(!todoTitle);\n      setHasUserIdError(!userId);\n\n      return;\n    }\n\n    const getNewTodoId = () => {\n      const todoIds = todos.map(({ id }) => id);\n\n      return Math.max(...todoIds) + 1;\n    };\n\n    const newTodo = {\n      id: getNewTodoId(),\n      title: todoTitle,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    };\n\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n\n    resetForm();\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setHasUserIdError(false);\n    setUserId(+event.target.value);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHasTitleError(false);\n    setTodoTitle(event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={addNewTodo}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleSelectChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}